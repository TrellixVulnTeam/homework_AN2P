{"ast":null,"code":"var _jsxFileName = \"/Users/rabiyyaalgayeva/Desktop/ecommerce/src/components/InfinityList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from './Grid';\nimport ProductCard from './ProductCard';\nimport { useEffect } from 'react/cjs/react.development';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InfinityList = props => {\n  _s();\n\n  const perLoad = 6; // items each load \n\n  const listRef = useRef(null);\n  const [data, setData] = useState([]);\n  const [load, setLoad] = useState(true);\n  const [index, setIndex] = useState(0);\n  useEffect(() => {\n    setData(props.data.slice(0, perLoad));\n    setIndex(1);\n  }, [props.data]);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", () => {\n      if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.current.offsetTop + 200) {\n        console.log(\"bottom reach\");\n        setLoad(true);\n      }\n    });\n  }, [listRef]);\n  useEffect(() => {\n    const getItems = () => {\n      const pages = Math.floor(props.data.length / perLoad);\n      const maxIndex = props.data.length % perLoad === 0 ? pages : pages + 1;\n\n      if (load && index <= maxIndex) {\n        const start = perLoad * index;\n        const end = start + perLoad;\n        setData(data.concat(props.data.slice(start, end)));\n        setIndex(index + 1);\n      }\n    };\n\n    getItems();\n    setLoad(false);\n  }, [load, index, data, props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: listRef,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      col: 3,\n      mdCol: 2,\n      smCol: 1,\n      gap: 20,\n      children: data.map((item, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n        img01: item.image01,\n        img02: item.image02,\n        name: item.title,\n        price: Number(item.price),\n        slug: item.slug\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InfinityList, \"AENhqrXICbMD9iIt8+4R76Tu7cw=\");\n\n_c = InfinityList;\nInfinityList.propTypes = {\n  data: PropTypes.array.isRequired\n};\nexport default InfinityList;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfinityList\");","map":{"version":3,"sources":["/Users/rabiyyaalgayeva/Desktop/ecommerce/src/components/InfinityList.jsx"],"names":["React","useRef","useState","PropTypes","Grid","ProductCard","useEffect","InfinityList","props","perLoad","listRef","data","setData","load","setLoad","index","setIndex","slice","window","addEventListener","scrollY","innerHeight","current","clientHeight","offsetTop","console","log","getItems","pages","Math","floor","length","maxIndex","start","end","concat","map","item","image01","image02","title","Number","price","slug","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Grid from './Grid'\nimport ProductCard from './ProductCard'\nimport { useEffect } from 'react/cjs/react.development'\n\nconst InfinityList = props => {\n\n    const perLoad = 6 // items each load \n\n    const listRef = useRef(null)\n\n    const [data, setData] = useState([])\n\n    const [load, setLoad] = useState(true)\n\n    const [index, setIndex] = useState(0)\n\n    useEffect(() => {\n        setData(props.data.slice(0, perLoad))\n        setIndex(1)\n    }, [props.data])\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", () => {\n            if (window.scrollY + window.innerHeight >= listRef.current.clientHeight + listRef.\n                current.offsetTop + 200) {\n                    console.log(\"bottom reach\")\n                    setLoad(true)\n                }\n        })\n    }, [listRef])\n\n    useEffect(() => {\n        const getItems = () => {\n            const pages = Math.floor(props.data.length / perLoad)\n            const maxIndex = props.data.length % perLoad === 0 ? pages : pages +1\n\n            if (load && index <= maxIndex) {\n                const start = perLoad * index\n                const end = start + perLoad\n\n                setData(data.concat(props.data.slice(start, end)))\n                setIndex(index + 1)\n            }\n        }\n        getItems()\n        setLoad(false)\n    }, [load, index, data, props.data])\n\n  return (\n    <div ref={listRef}>\n        <Grid\n                        col={3}\n                        mdCol={2}\n                        smCol={1}\n                        gap={20}\n                    >\n                        {\n                            data.map((item, index) => (\n                                <ProductCard\n                                    key={index}\n                                    img01={item.image01}\n                                    img02={item.image02}\n                                    name={item.title}\n                                    price={Number(item.price)}\n                                    slug={item.slug}\n                                />\n                            ))\n                        }\n                    </Grid>\n    </div>\n  )\n}\n\nInfinityList.propTypes = {\n    data: PropTypes.array.isRequired\n}\n\nexport default InfinityList"]},"metadata":{},"sourceType":"module"}