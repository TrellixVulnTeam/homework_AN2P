{"ast":null,"code":"var _jsxFileName = \"/Users/rabiyyaalgayeva/Desktop/ecommerce/src/pages/Catalog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Helmet from '../components/Helmet';\nimport Grid from '../components/Grid';\nimport ProductCard from '../components/ProductCard';\nimport CheckBox from '../components/CheckBox';\nimport productData from '../assets/fake-data/products';\nimport category from '../assets/fake-data/category';\nimport colors from '../assets/fake-data/product-color';\nimport size from '../assets/fake-data/product-size';\nimport Button from '../components/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalog = () => {\n  _s();\n\n  const initFilter = {\n    category: [],\n    color: [],\n    size: []\n  };\n  const productList = productData.getAllProducts();\n  const [products, setProducts] = useState(productList);\n  const [filter, setFilter] = useState(initFilter);\n\n  const filterSelect = (type, checked, item) => {\n    if (checked) {\n      switch (type) {\n        case \"CATEGORY\":\n          setFilter({ ...filter,\n            category: [...filter.category, item.categorySlug]\n          });\n          break;\n\n        case \"COLOR\":\n          setFilter({ ...filter,\n            color: [...filter.color, item.color]\n          });\n          break;\n\n        case \"SIZE\":\n          setFilter({ ...filter,\n            size: [...filter.size, item.size]\n          });\n          break;\n\n        default:\n      }\n    } else {\n      switch (type) {\n        case \"CATEGORY\":\n          const newCategory = filter.category.filter(e => e !== item.categorySlug);\n          setFilter({ ...filter,\n            category: newCategory\n          });\n          break;\n\n        case \"COLOR\":\n          const newColor = filter.color.filter(e => e !== item.color);\n          setFilter({ ...filter,\n            color: newColor\n          });\n          break;\n\n        case \"SIZE\":\n          const newSize = filter.size.filter(e => e !== item.size);\n          setFilter({ ...filter,\n            size: newSize\n          });\n          break;\n\n        default:\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    title: \"Product\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog__filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__title\",\n            children: \"product portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: category.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content__item\",\n              children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                label: item.display\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__title\",\n            children: \"color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: colors.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content__item\",\n              children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                label: item.display\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__title\",\n            children: \"size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: size.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content__item\",\n              children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                label: item.display\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              children: \"remove filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__content\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            col: 3,\n            md: 2,\n            smCol: 1,\n            gap: 20,\n            children: products.map((item, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n              img01: item.image01,\n              img02: item.image02,\n              name: item.title,\n              price: Number(item.price),\n              slug: item.slug\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Catalog, \"jPZUZru2+zuXPBTMn+jBiz3/2E4=\");\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/Users/rabiyyaalgayeva/Desktop/ecommerce/src/pages/Catalog.jsx"],"names":["React","useState","Helmet","Grid","ProductCard","CheckBox","productData","category","colors","size","Button","Catalog","initFilter","color","productList","getAllProducts","products","setProducts","filter","setFilter","filterSelect","type","checked","item","categorySlug","newCategory","e","newColor","newSize","map","index","display","image01","image02","title","Number","price","slug"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAkC,OAAlC;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,OAAOC,IAAP,MAAiB,kCAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,UAAU,GAAG;AACfL,IAAAA,QAAQ,EAAE,EADK;AAEfM,IAAAA,KAAK,EAAE,EAFQ;AAGfJ,IAAAA,IAAI,EAAE;AAHS,GAAnB;AAMA,QAAMK,WAAW,GAAGR,WAAW,CAACS,cAAZ,EAApB;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACa,WAAD,CAAxC;AAEA,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAACW,UAAD,CAApC;;AAEA,QAAMQ,YAAY,GAAG,CAACC,IAAD,EAAOC,OAAP,EAAgBC,IAAhB,KAAyB;AAC1C,QAAID,OAAJ,EAAa;AACT,cAAOD,IAAP;AACI,aAAK,UAAL;AACIF,UAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYX,YAAAA,QAAQ,EAAE,CAAC,GAAGW,MAAM,CAACX,QAAX,EAAqBgB,IAAI,CAACC,YAA1B;AAAtB,WAAD,CAAT;AACA;;AACJ,aAAK,OAAL;AACIL,UAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYL,YAAAA,KAAK,EAAE,CAAC,GAAGK,MAAM,CAACL,KAAX,EAAkBU,IAAI,CAACV,KAAvB;AAAnB,WAAD,CAAT;AACA;;AACJ,aAAK,MAAL;AACIM,UAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYT,YAAAA,IAAI,EAAE,CAAC,GAAGS,MAAM,CAACT,IAAX,EAAiBc,IAAI,CAACd,IAAtB;AAAlB,WAAD,CAAT;AACA;;AACJ;AAVJ;AAYH,KAbD,MAaO;AACH,cAAOY,IAAP;AACI,aAAK,UAAL;AACI,gBAAMI,WAAW,GAAGP,MAAM,CAACX,QAAP,CAAgBW,MAAhB,CAAuBQ,CAAC,IAAIA,CAAC,KAAKH,IAAI,CAACC,YAAvC,CAApB;AACAL,UAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYX,YAAAA,QAAQ,EAAEkB;AAAtB,WAAD,CAAT;AACA;;AACJ,aAAK,OAAL;AACI,gBAAME,QAAQ,GAAGT,MAAM,CAACL,KAAP,CAAaK,MAAb,CAAoBQ,CAAC,IAAIA,CAAC,KAAKH,IAAI,CAACV,KAApC,CAAjB;AACAM,UAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYL,YAAAA,KAAK,EAAEc;AAAnB,WAAD,CAAT;AACA;;AACJ,aAAK,MAAL;AACI,gBAAMC,OAAO,GAAGV,MAAM,CAACT,IAAP,CAAYS,MAAZ,CAAmBQ,CAAC,IAAIA,CAAC,KAAKH,IAAI,CAACd,IAAnC,CAAhB;AACAU,UAAAA,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYT,YAAAA,IAAI,EAAEmB;AAAlB,WAAD,CAAT;AACA;;AACJ;AAbJ;AAeH;AACJ,GA/BD;;AAiCA,sBACI,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAA,sBAEQrB,QAAQ,CAACsB,GAAT,CAAa,CAACN,IAAD,EAAOO,KAAP,kBACT;AACC,cAAA,SAAS,EAAC,wCADX;AAAA,qCAEI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAEP,IAAI,CAACQ;AADhB;AAAA;AAAA;AAAA;AAAA;AAFJ,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAoBI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAA,sBAEQtB,MAAM,CAACqB,GAAP,CAAW,CAACN,IAAD,EAAOO,KAAP,kBACP;AACC,cAAA,SAAS,EAAC,wCADX;AAAA,qCAEI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAEP,IAAI,CAACQ;AADhB;AAAA;AAAA;AAAA;AAAA;AAFJ,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ,eAsCI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAII;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAA,sBAEQrB,IAAI,CAACoB,GAAL,CAAS,CAACN,IAAD,EAAOO,KAAP,kBACL;AACC,cAAA,SAAS,EAAC,wCADX;AAAA,qCAEI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAEP,IAAI,CAACQ;AADhB;AAAA;AAAA;AAAA;AAAA;AAFJ,eAAUD,KAAV;AAAA;AAAA;AAAA;AAAA,oBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAtCJ,eAuDI;AAAK,UAAA,SAAS,EAAC,yBAAf;AAAA,iCACI;AAAK,YAAA,SAAS,EAAC,kCAAf;AAAA,mCACA,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBAvDJ,eA4DI;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,iCACI,QAAC,IAAD;AACI,YAAA,GAAG,EAAE,CADT;AAEI,YAAA,EAAE,EAAE,CAFR;AAGI,YAAA,KAAK,EAAE,CAHX;AAII,YAAA,GAAG,EAAE,EAJT;AAAA,sBAOQd,QAAQ,CAACa,GAAT,CAAa,CAACN,IAAD,EAAOO,KAAP,kBACT,QAAC,WAAD;AAEI,cAAA,KAAK,EAAEP,IAAI,CAACS,OAFhB;AAGI,cAAA,KAAK,EAAET,IAAI,CAACU,OAHhB;AAII,cAAA,IAAI,EAAEV,IAAI,CAACW,KAJf;AAKI,cAAA,KAAK,EAAEC,MAAM,CAACZ,IAAI,CAACa,KAAN,CALjB;AAMI,cAAA,IAAI,EAAEb,IAAI,CAACc;AANf,eACSP,KADT;AAAA;AAAA;AAAA;AAAA,oBADJ;AAPR;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBA5DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwFH,CAvID;;GAAMnB,O;;KAAAA,O;AAyIN,eAAeA,OAAf","sourcesContent":["import React, {  useState, } from 'react'\n\nimport Helmet from '../components/Helmet';\nimport Grid from '../components/Grid'\nimport ProductCard from '../components/ProductCard'\nimport CheckBox from '../components/CheckBox';\n\nimport productData from '../assets/fake-data/products'\nimport category from '../assets/fake-data/category';\nimport colors from '../assets/fake-data/product-color';\nimport size from '../assets/fake-data/product-size';\nimport Button from '../components/Button'\n\nconst Catalog = () => {\n\n    const initFilter = {\n        category: [],\n        color: [],\n        size: []\n    }\n\n    const productList = productData.getAllProducts()\n\n    const [products, setProducts] = useState(productList)\n\n    const [filter, setFilter] = useState(initFilter)\n\n    const filterSelect = (type, checked, item) => {\n        if (checked) {\n            switch(type) {\n                case \"CATEGORY\":\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\n                    break\n                case \"COLOR\":\n                    setFilter({...filter, color: [...filter.color, item.color]})\n                    break\n                case \"SIZE\":\n                    setFilter({...filter, size: [...filter.size, item.size]})\n                    break\n                default:\n            }\n        } else {\n            switch(type) {\n                case \"CATEGORY\":\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\n                    setFilter({...filter, category: newCategory})\n                    break\n                case \"COLOR\":\n                    const newColor = filter.color.filter(e => e !== item.color)\n                    setFilter({...filter, color: newColor})\n                    break\n                case \"SIZE\":\n                    const newSize = filter.size.filter(e => e !== item.size)\n                    setFilter({...filter, size: newSize})\n                    break\n                default:\n            }\n        }\n    }\n\n    return (\n        <Helmet title=\"Product\">\n            <div className=\"catalog\">\n                <div className=\"catalog__filter\">\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                          product portfolio\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                category.map((item, index) => (\n                                    <div key={index}\n                                     className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                            \n                                        />\n                                        </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                           color\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                colors.map((item, index) => (\n                                    <div key={index}\n                                     className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                        />\n                                        </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                          size\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                size.map((item, index) => (\n                                    <div key={index}\n                                     className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                        />\n                                        </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__content\">\n                        <Button size=\"sm\">remove filter</Button>\n                        </div>\n                    </div>\n                    <div className=\"catalog__content\">\n                        <Grid\n                            col={3}\n                            md={2}\n                            smCol={1}\n                            gap={20}\n                        >\n                            {\n                                products.map((item, index) => (\n                                    <ProductCard\n                                        key={index}\n                                        img01={item.image01}\n                                        img02={item.image02}\n                                        name={item.title}\n                                        price={Number(item.price)}\n                                        slug={item.slug}\n                                    />\n                                ))\n                            }\n                        </Grid>\n                    </div>\n                </div>\n            </div>\n        </Helmet>\n      )\n};\n\nexport default Catalog;\n"]},"metadata":{},"sourceType":"module"}