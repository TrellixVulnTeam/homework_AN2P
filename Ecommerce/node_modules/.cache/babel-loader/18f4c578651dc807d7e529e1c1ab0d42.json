{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst items = localStorage.getItem('cartItems') !== null ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  value: items\n};\nexport const cartItemsSlice = createSlice({\n  name: 'cartItems',\n  initialState,\n  reducers: {\n    addItem: (state, action) => {\n      const newItem = action.payload;\n      const duplicate = findItem(state.value, newItem);\n\n      if (duplicate.length > 0) {\n        state.value = delItem(state.value, newItem);\n        state.value = [...state.value, { ...newItem,\n          id: duplicate[0].id,\n          quantity: newItem.quantity + duplicate[0].quantity\n        }];\n      } else {\n        state.value = [...state.value, { ...newItem,\n          id: state.value.length > 0 ? state.value[state.value.length - 1].id + 1 : 1\n        }];\n      }\n\n      localStorage.setItem('cartItems', JSON.stringify(sortItems(state.value)));\n    },\n    updateItem: (state, action) => {\n      const itemUpdate = action.payload;\n      const item = findItem(state.value, itemUpdate);\n\n      if (item.length > 0) {\n        state.value = delItem(state.value, itemUpdate);\n        state.value = [...state.value, { ...itemUpdate,\n          id: item[0].id\n        }];\n        localStorage.setItem('cartItems', JSON.stringify(sortItems(state.value)));\n      }\n    }\n  }\n});\n\nconst findItem = (arr, item) => arr.filter(e => e.slug === item.slug && e.color === item.color && e.size === item.size);\n\nconst delItem = (arr, item) => arr.filter(e => e.slug !== item.slug || e.color !== item.color || e.size !== item.size);\n\nconst sortItems = arr => arr.sort((a, b) => a.id > b.id ? 1 : a.id < b.id ? -1 : 0);\n\nexport const {\n  addItem\n} = cartItemsSlice.actions;\nexport default cartItemsSlice.reducer;","map":{"version":3,"sources":["/Users/rabiyyaalgayeva/Desktop/ecommerce/src/redux/shopping-cart/cartItemsSlide.js"],"names":["createSlice","items","localStorage","getItem","JSON","parse","initialState","value","cartItemsSlice","name","reducers","addItem","state","action","newItem","payload","duplicate","findItem","length","delItem","id","quantity","setItem","stringify","sortItems","updateItem","itemUpdate","item","arr","filter","e","slug","color","size","sort","a","b","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,MAAsC,IAAtC,GAA6CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAA7C,GAA6F,EAA3G;AAEA,MAAMG,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAEN;AADU,CAArB;AAGA,OAAO,MAAMO,cAAc,GAAGR,WAAW,CAAC;AACtCS,EAAAA,IAAI,EAAE,WADgC;AAEtCH,EAAAA,YAFsC;AAGtCI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,OAAO,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACxB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AAEA,YAAMC,SAAS,GAAGC,QAAQ,CAACL,KAAK,CAACL,KAAP,EAAcO,OAAd,CAA1B;;AAEA,UAAIE,SAAS,CAACE,MAAV,GAAmB,CAAvB,EAA0B;AAC1BN,QAAAA,KAAK,CAACL,KAAN,GAAcY,OAAO,CAACP,KAAK,CAACL,KAAP,EAAaO,OAAb,CAArB;AAEAF,QAAAA,KAAK,CAACL,KAAN,GAAc,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiB,EAC3B,GAAGO,OADwB;AAE3BM,UAAAA,EAAE,EAACJ,SAAS,CAAC,CAAD,CAAT,CAAaI,EAFW;AAG3BC,UAAAA,QAAQ,EAAEP,OAAO,CAACO,QAAR,GAAmBL,SAAS,CAAC,CAAD,CAAT,CAAaK;AAHf,SAAjB,CAAd;AAKC,OARD,MAQO;AACHT,QAAAA,KAAK,CAACL,KAAN,GAAc,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAgB,EAC1B,GAAGO,OADuB;AAE1BM,UAAAA,EAAE,EAAER,KAAK,CAACL,KAAN,CAAYW,MAAZ,GAAqB,CAArB,GAAyBN,KAAK,CAACL,KAAN,CAAYK,KAAK,CAACL,KAAN,CAAYW,MAAZ,GAAoB,CAAhC,EAAmCE,EAAnC,GAAwC,CAAjE,GAAqE;AAF/C,SAAhB,CAAd;AAIH;;AACDlB,MAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAkClB,IAAI,CAACmB,SAAL,CAAeC,SAAS,CAACZ,KAAK,CAACL,KAAP,CAAxB,CAAlC;AACH,KArBK;AAsBNkB,IAAAA,UAAU,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;AAC3B,YAAMa,UAAU,GAAGb,MAAM,CAACE,OAA1B;AAEA,YAAMY,IAAI,GAAGV,QAAQ,CAACL,KAAK,CAACL,KAAP,EAAcmB,UAAd,CAArB;;AAEA,UAAGC,IAAI,CAACT,MAAL,GAAc,CAAjB,EAAoB;AAChBN,QAAAA,KAAK,CAACL,KAAN,GAAcY,OAAO,CAACP,KAAK,CAACL,KAAP,EAAcmB,UAAd,CAArB;AACAd,QAAAA,KAAK,CAACL,KAAN,GAAc,CAAC,GAAGK,KAAK,CAACL,KAAV,EAAiB,EAC3B,GAAGmB,UADwB;AAE3BN,UAAAA,EAAE,EAACO,IAAI,CAAC,CAAD,CAAJ,CAAQP;AAFgB,SAAjB,CAAd;AAIAlB,QAAAA,YAAY,CAACoB,OAAb,CAAqB,WAArB,EAAkClB,IAAI,CAACmB,SAAL,CAAeC,SAAS,CAACZ,KAAK,CAACL,KAAP,CAAxB,CAAlC;AACH;AACJ;AAnCK;AAH4B,CAAD,CAAlC;;AAyCP,MAAMU,QAAQ,GAAG,CAACW,GAAD,EAAMD,IAAN,KAAeC,GAAG,CAACC,MAAJ,CAAWC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,IAAI,CAACI,IAAhB,IAAwBD,CAAC,CAACE,KAAF,KAAYL,IAAI,CAACK,KAAzC,IAAkDF,CAAC,CAACG,IAAF,KAAWN,IAAI,CAACM,IAAlF,CAAhC;;AAEA,MAAMd,OAAO,GAAG,CAACS,GAAD,EAAMD,IAAN,KAAeC,GAAG,CAACC,MAAJ,CAAWC,CAAC,IAAIA,CAAC,CAACC,IAAF,KAAWJ,IAAI,CAACI,IAAhB,IAAwBD,CAAC,CAACE,KAAF,KAAYL,IAAI,CAACK,KAAzC,IAAkDF,CAAC,CAACG,IAAF,KAAWN,IAAI,CAACM,IAAlF,CAA/B;;AAEA,MAAMT,SAAS,GAAII,GAAD,IAASA,GAAG,CAACM,IAAJ,CAAS,CAACC,CAAD,EAAGC,CAAH,KAASD,CAAC,CAACf,EAAF,GAAMgB,CAAC,CAAChB,EAAR,GAAa,CAAb,GAAkBe,CAAC,CAACf,EAAF,GAAOgB,CAAC,CAAChB,EAAT,GAAc,CAAC,CAAf,GAAmB,CAAvD,CAA3B;;AAEA,OAAO,MAAM;AAAET,EAAAA;AAAF,IAAcH,cAAc,CAAC6B,OAAnC;AAEP,eAAe7B,cAAc,CAAC8B,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\n\nconst items = localStorage.getItem('cartItems') !== null ? JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst initialState = {\n    value: items\n}\nexport const cartItemsSlice = createSlice({\n    name: 'cartItems',\n    initialState,\n    reducers: {\n        addItem: (state, action) => {\n            const newItem = action.payload\n\n            const duplicate = findItem(state.value, newItem)\n            \n            if (duplicate.length > 0) {\n            state.value = delItem(state.value,newItem)\n\n            state.value = [...state.value, {\n                ...newItem,\n                id:duplicate[0].id,\n                quantity: newItem.quantity + duplicate[0].quantity\n            }]\n            } else {\n                state.value = [...state.value,{\n                    ...newItem,\n                    id: state.value.length > 0 ? state.value[state.value.length -1].id + 1 : 1\n                }]\n            }\n            localStorage.setItem('cartItems', JSON.stringify(sortItems(state.value)))\n        },\n        updateItem: (state, action) => {\n            const itemUpdate = action.payload\n\n            const item = findItem(state.value, itemUpdate)\n\n            if(item.length > 0) {\n                state.value = delItem(state.value, itemUpdate)\n                state.value = [...state.value, {\n                    ...itemUpdate,\n                    id:item[0].id,\n                }]\n                localStorage.setItem('cartItems', JSON.stringify(sortItems(state.value)))\n            }\n        }\n    }\n})\nconst findItem = (arr, item) => arr.filter(e => e.slug === item.slug && e.color === item.color && e.size === item.size)\n\nconst delItem = (arr, item) => arr.filter(e => e.slug !== item.slug || e.color !== item.color || e.size !== item.size)\n\nconst sortItems = (arr) => arr.sort((a,b) => a.id> b.id ? 1 : (a.id < b.id ? -1 : 0))\n\nexport const { addItem } = cartItemsSlice.actions\n\nexport default cartItemsSlice.reducer"]},"metadata":{},"sourceType":"module"}