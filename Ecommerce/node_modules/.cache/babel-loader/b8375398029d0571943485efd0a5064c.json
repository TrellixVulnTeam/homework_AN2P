{"ast":null,"code":"var _jsxFileName = \"/Users/rabiyyaalgayeva/Desktop/ecommerce/src/pages/Catalog.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport Helmet from '../components/Helmet';\nimport Grid from '../components/Grid';\nimport ProductCard from '../components/ProductCard';\nimport CheckBox from '../components/CheckBox';\nimport productData from '../assets/fake-data/products';\nimport category from '../assets/fake-data/category';\nimport colors from '../assets/fake-data/product-color';\nimport size from '../assets/fake-data/product-size';\nimport Button from '../components/Button';\nimport InfinityList from '../components/InfinityList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Catalog = () => {\n  _s();\n\n  const initFilter = {\n    category: [],\n    color: [],\n    size: []\n  };\n  const productList = productData.getAllProducts();\n  const [products, setProducts] = useState(productList);\n  const [filter, setFilter] = useState(initFilter);\n\n  const filterSelect = (type, checked, item) => {\n    if (checked) {\n      switch (type) {\n        case \"CATEGORY\":\n          setFilter({ ...filter,\n            category: [...filter.category, item.categorySlug]\n          });\n          break;\n\n        case \"COLOR\":\n          setFilter({ ...filter,\n            color: [...filter.color, item.color]\n          });\n          break;\n\n        case \"SIZE\":\n          setFilter({ ...filter,\n            size: [...filter.size, item.size]\n          });\n          break;\n\n        default:\n      }\n    } else {\n      switch (type) {\n        case \"CATEGORY\":\n          const newCategory = filter.category.filter(e => e !== item.categorySlug);\n          setFilter({ ...filter,\n            category: newCategory\n          });\n          break;\n\n        case \"COLOR\":\n          const newColor = filter.color.filter(e => e !== item.color);\n          setFilter({ ...filter,\n            color: newColor\n          });\n          break;\n\n        case \"SIZE\":\n          const newSize = filter.size.filter(e => e !== item.size);\n          setFilter({ ...filter,\n            size: newSize\n          });\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const clearFilter = () => setFilter(initFilter);\n\n  const updateProducts = useCallback(() => {\n    let temp = productList;\n\n    if (filter.category.length > 0) {\n      temp = temp.filter(e => filter.category.includes(e.categorySlug));\n    }\n\n    if (filter.color.length > 0) {\n      temp = temp.filter(e => {\n        const check = e.colors.find(color => filter.color.includes(color));\n        return check !== undefined;\n      });\n    }\n\n    if (filter.size.length > 0) {\n      temp = temp.filter(e => {\n        const check = e.size.find(size => filter.size.includes(size));\n        return check !== undefined;\n      });\n    }\n\n    setProducts(temp);\n  }, [filter, productList]);\n  useEffect(() => {\n    updateProducts();\n  }, [updateProducts]);\n  return /*#__PURE__*/_jsxDEV(Helmet, {\n    title: \"Product\",\n    children: [console.log(filter), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"catalog\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog__filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__title\",\n            children: \"product portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: category.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content__item\",\n              children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                label: item.display,\n                onChange: input => filterSelect(\"CATEGORY\", input.checked, item),\n                checked: filter.category.includes(item.categorySlug)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__title\",\n            children: \"color\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: colors.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content__item\",\n              children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                label: item.display,\n                onChange: input => filterSelect(\"COLOR\", input.checked, item),\n                checked: filter.color.includes(item.color)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__title\",\n            children: \"size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: size.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"catalog__filter__widget__content__item\",\n              children: /*#__PURE__*/_jsxDEV(CheckBox, {\n                label: item.display,\n                onChange: input => filterSelect(\"SIZE\", input.checked, item),\n                checked: filter.size.includes(item.size)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 41\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"catalog__filter__widget\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"catalog__filter__widget__content\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              size: \"sm\",\n              onClick: clearFilter,\n              children: \"remove filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"catalog__content\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          col: 3,\n          mdCol: 2,\n          smCol: 1,\n          gap: 20,\n          children: products.map((item, index) => /*#__PURE__*/_jsxDEV(ProductCard, {\n            img01: item.image01,\n            img02: item.image02,\n            name: item.title,\n            price: Number(item.price),\n            slug: item.slug\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Catalog, \"xc+OasxQ10UI8Wut+RnOh8OTcGM=\");\n\n_c = Catalog;\nexport default Catalog;\n\nvar _c;\n\n$RefreshReg$(_c, \"Catalog\");","map":{"version":3,"sources":["/Users/rabiyyaalgayeva/Desktop/ecommerce/src/pages/Catalog.jsx"],"names":["React","useCallback","useState","useEffect","Helmet","Grid","ProductCard","CheckBox","productData","category","colors","size","Button","InfinityList","Catalog","initFilter","color","productList","getAllProducts","products","setProducts","filter","setFilter","filterSelect","type","checked","item","categorySlug","newCategory","e","newColor","newSize","clearFilter","updateProducts","temp","length","includes","check","find","undefined","console","log","map","index","display","input","image01","image02","title","Number","price","slug"],"mappings":"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","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react'\nimport Helmet from '../components/Helmet'\nimport Grid from '../components/Grid'\nimport ProductCard from '../components/ProductCard'\nimport CheckBox from '../components/CheckBox'\n\nimport productData from '../assets/fake-data/products'\nimport category from '../assets/fake-data/category'\nimport colors from '../assets/fake-data/product-color'\nimport size from '../assets/fake-data/product-size'\nimport Button from '../components/Button'\nimport InfinityList from '../components/InfinityList'\n\nconst Catalog = () => {\n\n    const initFilter = {\n        category: [],\n        color: [],\n        size: []\n    }\n\n    const productList = productData.getAllProducts()\n\n    const [products, setProducts] = useState(productList)\n\n    const [filter, setFilter] = useState(initFilter)\n\n    const filterSelect = (type, checked, item) => {\n        if (checked) {\n            switch(type) {\n                case \"CATEGORY\":\n                    setFilter({...filter, category: [...filter.category, item.categorySlug]})\n                    break\n                case \"COLOR\":\n                    setFilter({...filter, color: [...filter.color, item.color]})\n                    break\n                case \"SIZE\":\n                    setFilter({...filter, size: [...filter.size, item.size]})\n                    break\n                default:\n            }\n        } else {\n            switch(type) {\n                case \"CATEGORY\":\n                    const newCategory = filter.category.filter(e => e !== item.categorySlug)\n                    setFilter({...filter, category: newCategory})\n                    break\n                case \"COLOR\":\n                    const newColor = filter.color.filter(e => e !== item.color)\n                    setFilter({...filter, color: newColor})\n                    break\n                case \"SIZE\":\n                    const newSize = filter.size.filter(e => e !== item.size)\n                    setFilter({...filter, size: newSize})\n                    break\n                default:\n            }\n        }\n    }\n\n    const clearFilter = () => setFilter(initFilter)\n\n    const updateProducts = useCallback(\n        () => {\n            let temp = productList\n\n            if (filter.category.length > 0) {\n                temp = temp.filter(e => filter.category.includes(e.categorySlug))\n            }\n\n            if (filter.color.length > 0) {\n                temp = temp.filter(e => {\n                    const check = e.colors.find(color => filter.color.includes(color))\n                    return check !== undefined\n                })\n            }\n\n            if (filter.size.length > 0) {\n                temp = temp.filter(e => {\n                    const check = e.size.find(size => filter.size.includes(size))\n                    return check !== undefined\n                })\n            }\n\n            setProducts(temp)\n        },\n        [filter, productList],\n    )\n\n    useEffect(() => {\n        updateProducts()\n    }, [updateProducts])\n\n    return (\n        <Helmet title=\"Product\">\n            {\n                console.log(filter)\n            }\n            <div className=\"catalog\">\n                <div className=\"catalog__filter\">\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                        product portfolio\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                category.map((item, index) => (\n                                    <div key={index} \n                                    className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                            onChange={(input) => filterSelect(\"CATEGORY\", input.checked, item)}\n                                            checked={filter.category.includes(item.categorySlug)}\n                                        />\n                                        </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                           color\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                colors.map((item, index) => (\n                                    <div key={index} \n                                    className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                            onChange={(input) => filterSelect(\"COLOR\", input.checked, item)}\n                                            checked={filter.color.includes(item.color)}\n                                        />\n                                        </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__title\">\n                        size\n                        </div>\n                        <div className=\"catalog__filter__widget__content\">\n                            {\n                                size.map((item, index) => (\n                                    <div key={index} \n                                    className=\"catalog__filter__widget__content__item\">\n                                        <CheckBox\n                                            label={item.display}\n                                            onChange={(input) => filterSelect(\"SIZE\", input.checked, item)}\n                                            checked={filter.size.includes(item.size)}\n                                        />\n                                        </div>\n                                ))\n                            }\n                        </div>\n                    </div>\n\n                    <div className=\"catalog__filter__widget\">\n                        <div className=\"catalog__filter__widget__content\">\n                        <Button size=\"sm\" onClick={clearFilter}>remove filter</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"catalog__content\">\n                    <Grid\n                        col={3}\n                        mdCol={2}\n                        smCol={1}\n                        gap={20}\n                    >\n                        {\n                            products.map((item, index) => (\n                                <ProductCard\n                                    key={index}\n                                    img01={item.image01}\n                                    img02={item.image02}\n                                    name={item.title}\n                                    price={Number(item.price)}\n                                    slug={item.slug}\n                                />\n                            ))\n                        }\n                    </Grid>\n                </div>\n            </div>\n        </Helmet>\n    )\n}\n\nexport default Catalog\n"]},"metadata":{},"sourceType":"module"}